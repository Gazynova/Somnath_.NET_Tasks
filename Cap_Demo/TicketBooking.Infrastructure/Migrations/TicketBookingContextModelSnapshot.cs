// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketBooking.Infrastructure.Context;

#nullable disable

namespace TicketBooking.Infrastructure.Migrations
{
    [DbContext(typeof(TicketBookingContext))]
    partial class TicketBookingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TicketBooking.Demo.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventCategoryId");

                    b.ToTable("events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableSeats = 1000,
                            Date = new DateTime(2021, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Amit Mishra Live Concert",
                            EventCategoryId = 1,
                            Name = "Amit Mishra",
                            Price = 500m,
                            Venue = "Mumbai"
                        },
                        new
                        {
                            Id = 2,
                            AvailableSeats = 1000,
                            Date = new DateTime(2021, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Arijit Singh Live Concert",
                            EventCategoryId = 1,
                            Name = "Arijit Singh",
                            Price = 500m,
                            Venue = "Mumbai"
                        },
                        new
                        {
                            Id = 3,
                            AvailableSeats = 500,
                            Date = new DateTime(2025, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nvidia GTC Conference",
                            EventCategoryId = 2,
                            Name = "Nvidia  GTC",
                            Price = 100m,
                            Venue = "Mumbai"
                        });
                });

            modelBuilder.Entity("TicketBooking.Demo.EventCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EventCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventCategoryName = "Music"
                        },
                        new
                        {
                            Id = 2,
                            EventCategoryName = "Conference"
                        },
                        new
                        {
                            Id = 3,
                            EventCategoryName = "Sports"
                        });
                });

            modelBuilder.Entity("TicketBooking.Demo.Event", b =>
                {
                    b.HasOne("TicketBooking.Demo.EventCategory", "eventType")
                        .WithMany()
                        .HasForeignKey("EventCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("eventType");
                });
#pragma warning restore 612, 618
        }
    }
}
